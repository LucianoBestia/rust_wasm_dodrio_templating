var searchIndex = JSON.parse('{\
"rust_wasm_dodrio_templating":{"doc":"rust_wasm_dodrio_templatinghtml templating for dodrio…","i":[[0,"html_template_mod","rust_wasm_dodrio_templating","html_template_mod Html templating for dodrio, generic code…",null,null],[4,"HtmlOrSvg","rust_wasm_dodrio_templating::html_template_mod","Svg elements are different because they have a namespace",null,null],[13,"Html","","html element",0,null],[13,"Svg","","svg element",0,null],[5,"empty_div","","get en empty div node",null,[[["rendercontext",3]],["node",3]]],[5,"decode_5_xml_control_characters","","decode 5 xml control characters : \\\" \' & < >…",null,[[],["string",3]]],[8,"HtmlTemplating","","the RootRenderingComponent struct must implement this…",null,null],[10,"replace_with_string","","",1,[[],["string",3]]],[10,"retain_next_node_or_attribute","","",1,[[]]],[10,"replace_with_nodes","","",1,[[["rendercontext",3]],[["vec",3],["node",3]]]],[10,"set_event_listener","","",1,[[["string",3]],[["fn",8],["box",3]]]],[11,"render_template","","get root element Node. I wanted to use dodrio::Node, but…",1,[[["rendercontext",3],["htmlorsvg",4]],[["string",3],["result",4],["node",3]]]],[11,"fill_element_builder","","Recursive function to fill the Element with attributes and…",1,[[["vec",3],["htmlorsvg",4],["rendercontext",3],["vec",3],["readerformicroxml",3],["vec",3],["elementbuilder",3],["vec",3]],[["result",4],["elementbuilder",3],["string",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[],["htmlorsvg",4]]]],"p":[[4,"HtmlOrSvg"],[8,"HtmlTemplating"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);